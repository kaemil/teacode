{"version":3,"sources":["components/PageSwitch.js","components/SearchBar.js","components/ListItem.js","components/UsersList.js","App.js","index.js"],"names":["PageSwitch","props","className","onClick","pageDown","switchPage","pageUp","SearchBar","type","placeholder","value","filterText","onChange","e","filteredText","target","filteredList","resetSwitch","ListItem","avatar","push","src","alt","name","initial","charAt","surname","useEffect","listID","includes","userID","document","getElementById","setAttribute","removeAttribute","deleteID","addID","id","UsersList","userList","contactList","length","i","undefined","first_name","last_name","listFullLength","filterList","App","prop","useState","setContactList","setSwitchPage","setFilterText","setFilterList","listLength","setListLength","setListID","fetchData","a","fetch","response","json","data","sort","b","console","log","text","newFilteredList","forEach","element","toLowerCase","newID","index","indexOf","slice","concat","Math","round","ReactDOM","render"],"mappings":"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","file":"static/js/main.6901373f.chunk.js","sourcesContent":["function PageSwitch(props){\r\n     return(\r\n          <div className='contact__pagesSwitch'>\r\n               <button className='contact__buttonSwitch' onClick={props.pageDown}>&lt;</button>\r\n               <div className='contact__displayValue'>{props.switchPage}</div>\r\n               <button className='contact__buttonSwitch' onClick={props.pageUp}>&gt;</button>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default PageSwitch","function SearchBar(props){     \r\n     const filterTextChange =(e)=>{\r\n          props.filteredText(e.target.value)\r\n          props.filteredList(e.target.value)\r\n          props.resetSwitch()\r\n     }\r\n     \r\nreturn(\r\n     <div className='contact__searchInput'>\r\n          <input type='text' placeholder='Search...' value={props.filterText} onChange={filterTextChange}></input>\r\n     </div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport default SearchBar\r\n","import {useEffect} from \"react\";\r\n\r\nfunction ListItem(props){\r\n     const avatar=[]\r\n     if(props.avatar !== null){\r\n          avatar.push(<img key={props.name} src={props.avatar} alt={props.avatar}></img>)\r\n     }else{\r\n          const initial = props.name.charAt(0) + props.surname.charAt(0)\r\n          avatar.push(initial)\r\n     }\r\n     //Checking checkbox status//\r\n     const checking = ()=>{\r\n          if(props.listID.includes(props.userID)){\r\n               props.deleteID(props.userID)\r\n               document.getElementById(props.userID).removeAttribute('checked','')\r\n          } else {\r\n               props.addID(props.userID)\r\n               document.getElementById(props.userID).setAttribute('checked','')\r\n          }\r\n     }\r\n     useEffect(() => {\r\n          if(props.listID.includes(props.userID)){\r\n               document.getElementById(props.userID).setAttribute('checked','')\r\n          } else{\r\n               document.getElementById(props.userID).removeAttribute('checked','')\r\n          }\r\n     });\r\n\r\n     return(\r\n          <div className='contact__listItem' onClick={checking}>\r\n               <div className='contact__avatar'>{avatar}</div>\r\n               <div className='contact__fullName'>{props.name} {props.surname}</div>\r\n               <div className='contact__checkbox'><input type='checkbox' id={props.userID}></input></div>\r\n          </div>\r\n     )\r\n}\r\n     \r\nexport default ListItem\r\n     ","import ListItem from './ListItem'\r\nfunction UsersList(props){\r\n     const userList=[]\r\n     if (props.contactList.length > 0) {\r\n          //Rendering all contacts from the list//\r\n         \r\n          if(props.filterText ===''){\r\n               \r\n               for(let i=20*(props.switchPage-1);i<=20*props.switchPage-1;i++){\r\n                    if(props.contactList[i]!==undefined){\r\n                         const name = props.contactList[i].first_name\r\n                         const surname = props.contactList[i].last_name\r\n                         const avatar = props.contactList[i].avatar\r\n                         userList.push(<ListItem name={name} listID={props.listID} contactList={props.contactList} listFullLength={props.listFullLength} key={props.contactList[i].id} surname={surname}  avatar={avatar} userID={props.contactList[i].id} addID={props.addID} deleteID={props.deleteID} />)\r\n\r\n                    }\r\n               }\r\n          } else{ \r\n               //Rendering filtered contacts from the list//\r\n               for(let i=20*(props.switchPage-1);i<=20*props.switchPage-1;i++){\r\n                    if(props.filterList[i]!==undefined){\r\n                         const name = props.filterList[i].first_name\r\n                         const surname = props.filterList[i].last_name\r\n                         const avatar = props.filterList[i].avatar\r\n                         userList.push(<ListItem name={name} listID={props.listID} key={props.contactList[i].id} surname={surname} avatar={avatar} addID={props.addID} deleteID={props.deleteID} userID={props.filterList[i].id} />) \r\n                    }\r\n               }\r\n          }\r\n     }\r\n\r\n\r\n     return(\r\n          <div className='contact__contactsList'>\r\n               {userList}\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default UsersList","import React from 'react';\nimport {useEffect,useState} from \"react\";\nimport PageSwitch from './components/PageSwitch'\nimport SearchBar from './components/SearchBar'\nimport UsersList from './components/UsersList'\n\nfunction App() {\n     const[contactList,setContactList]=useState([])\n     const[switchPage,setSwitchPage]=useState(1)\n     const[filterText,setFilterText]=useState('')\n     const[filterList,setFilterList]=useState([])\n     const[listLength,setListLength]=useState(0)\n     const[listID,setListID]=useState([])\n     //Getting data from API//\n     const fetchData = async () => {\n          const response = await fetch(\"https://teacode-recruitment-challenge.s3.eu-central-1.amazonaws.com/users.json\");\n          const data = await response.json();\n          setListLength(data.length)\n          return setContactList(data);}\n     useEffect(() => {\n          fetchData()\n     }, []);\n     //Sorting by surn_name//\n     function SortOrder(prop) {    \n          return function(a, b) {    \n              if (a[prop] > b[prop]) {    \n                  return 1;    \n              } else if (a[prop] < b[prop]) {    \n                  return -1;    \n              }    \n              return 0;    \n          }    \n      }  \n\n     //Changing number of page with users//\n     contactList.sort(SortOrder(\"last_name\"));\n     const pageDown =()=>{\n          if(switchPage>1)\n          setSwitchPage(switchPage-1)\n     }\n     const pageUp =()=>{\n          if(switchPage<Math.round(listLength/20))\n          setSwitchPage(switchPage+1)\n     }\n     \n     //Getting input value to find user//\n     const filteredText=(text)=>{\n          setFilterText(text)\n     }\n\n\n     //Creating list with filtered items//\n     const filteredList=(text)=>{\n          const newFilteredList=[]\n          contactList.forEach(element=>{\n               if(element.first_name.toLowerCase().includes(text.toLowerCase()) || element.last_name.toLowerCase().includes(text.toLowerCase())){\n                    newFilteredList.push(element)\n               }})\n               if(text===''){\n                    setListLength(contactList.length)\n               } else{\n                    setFilterList(newFilteredList)\n                    setListLength(newFilteredList.length)\n               }\n        \n     }\n     //Adding or deleting ID from list displayed in console//\n\n     const addID=(newID)=>{\n          setListID([...listID, newID])          \n     }\n     const deleteID=(newID)=>{\n          const index = listID.indexOf(newID)\n          setListID(listID.slice(0,index).concat(listID.slice(index+1)))\n     }\n     const resetSwitch=()=>{\n          setSwitchPage(1)\n\n     }\n\n     //Displaying list of users ID after checking specific user//\n     useEffect(() => {\n          if(listID.length !== 0){\n               console.log(listID)\n          }\n          \n     });\n     return (\n          <div className=\"contact__container\">\n               <div className='contact__header'><h2>List of Contacts</h2></div>\n               <SearchBar contactList={contactList} filteredText={filteredText} filteredList={filteredList} resetSwitch={resetSwitch} listID={listID} filterList={filterList}/>\n               <UsersList contactList={contactList} \n               switchPage={switchPage} \n               filterText={filterText} \n               filterList={filterList} \n               addID={addID}\n               listID={listID}\n               deleteID={deleteID}\n               resetSwitch={resetSwitch}\n                />\n               <PageSwitch switchPage={switchPage} pageDown={pageDown} pageUp={pageUp} />\n          </div>\n     );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}