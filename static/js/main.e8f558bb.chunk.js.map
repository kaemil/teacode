{"version":3,"sources":["context.js","hooks/usePagination.js","consts.js","hooks/useGetUsers.js","components/Pagination.js","components/SearchBar.js","components/UserItem.js","components/UsersList.js","components/Loader.js","App.js","index.js"],"names":["UsersContext","createContext","usePagination","users","useState","page","setPage","handlePageDown","prev","handlePageUp","Math","round","length","sliceDataPerPage","data","dataPerPage","startIndex","slice","useGetUsers","setUsers","isLoading","setIsLoading","fetchData","a","fetch","response","json","console","log","useEffect","Pagination","className","onClick","SearchBar","searchValue","setSearchValue","type","placeholder","value","onChange","e","target","toLowerCase","UserItem","user","useContext","handleSelectedUsers","selectedUsersIds","avatar","id","first_name","last_name","image","src","alt","imagePlaceHolder","charAt","avatarImage","checked","includes","UsersList","usersList","map","Loader","App","setSelectedUsersIds","pagination","filteredList","filter","fullName","paginatedUsersList","sortBy","Provider","window","alert","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"wLAEaA,EAAeC,wBAAc,ICuC3BC,EArCO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvB,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiCA,MAAO,CAAEC,eA5Bc,WACjBF,EAAO,GACTC,GAAQ,SAACE,GAAD,OAAUA,EAAO,MA0BJC,aAnBJ,WACfJ,EAAOK,KAAKC,MAAMR,EAAMS,OCjBH,KDkBvBN,GAAQ,SAACE,GAAD,OAAUA,EAAO,MAiBUK,iBAVd,WAInB,IAHJC,EAGG,uDAHI,GACPT,EAEG,uDAFI,EACPU,EACG,uDC7BsB,GD8BnBC,GAAcX,EAAO,GAAKU,EAEhC,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAMG,MAAMD,EAAYA,EAAaD,IAGWV,S,uBEH5Ca,EA/BK,WAClB,MAA0Bd,mBAAS,IAAnC,mBAAOD,EAAP,KAAcgB,EAAd,KACA,EAAkCf,oBAAS,GAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KAKMC,EAAS,uCAAG,8BAAAC,EAAA,sEAEdF,GAAa,GAFC,SAISG,MDd3B,kFCUkB,cAIRC,EAJQ,gBAKKA,EAASC,OALd,QAKRZ,EALQ,SAQZK,EAASL,GARG,kDAWda,QAAQC,IAAI,SAAZ,MAXc,yBAadP,GAAa,GAbC,6EAAH,qDAqBf,OAJAQ,qBAAU,WACRP,MACC,IAEI,CAAEnB,QAAOiB,c,OCjBHU,EAfI,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAME,EAAT,EAASA,eAAgBE,EAAzB,EAAyBA,aAAzB,OACjB,sBAAKsB,UAAU,sBAAf,UACE,wBACEA,UAAU,kCACVC,QAASzB,EAFX,eAMA,qBAAKwB,UAAU,2BAAf,SAA2C1B,IAC3C,wBAAQ0B,UAAU,kCAAkCC,QAASvB,EAA7D,mBCSWwB,EAlBG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAKhC,OACE,sBAAKJ,UAAU,wBAAf,UACE,uBACEK,KAAK,OACLC,YAAY,YACZC,MAAOJ,EACPK,SAVmB,SAACC,GACxBL,EAAeK,EAAEC,OAAOH,MAAMI,kBAW5B,wBAAQV,QAAS,kBAAMG,EAAe,KAAtC,uBCgBSQ,EAzBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,EAAkDC,qBAAW7C,GAArD8C,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,iBAErBC,EAAsCJ,EAAtCI,OAAQC,EAA8BL,EAA9BK,GAAIC,EAA0BN,EAA1BM,WAAYC,EAAcP,EAAdO,UAE1BC,EAAQ,qBAAKC,IAAKL,EAAQM,IAAI,aAC9BC,EAAgB,UAAML,EAAWM,OAAO,GAAxB,YAA8BL,EAAUK,OAAO,IAE/DC,EAAcT,EAASI,EAAQG,EAErC,OACE,sBAAKxB,UAAU,qBAAqBC,QAAS,kBAAMc,EAAoBG,IAAvE,UACE,qBAAKlB,UAAU,kBAAf,SAAkC0B,IAClC,qBAAK1B,UAAU,qBAAf,mBAAwCmB,EAAxC,YAAsDC,KACtD,qBAAKpB,UAAU,oBAAf,SACE,uBACEK,KAAK,WACLsB,QAASX,EAAiBY,SAASV,GACnCA,GAAIA,UCZCW,EARG,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,SAChB,qBAAK9B,UAAU,sBAAf,SACG8B,EAAUC,KAAI,SAAClB,GAAD,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKK,UCCXc,EANA,kBACb,qBAAKhC,UAAU,kBAAf,SACE,iDCqEWiC,EAzDH,WACV,MAAgD5D,mBAAS,IAAzD,mBAAO2C,EAAP,KAAyBkB,EAAzB,KACA,EAAsC7D,mBAAS,IAA/C,mBAAO8B,EAAP,KAAoBC,EAApB,KAEA,EAA6BjB,IAArBf,EAAR,EAAQA,MAAOiB,EAAf,EAAeA,UAET8C,EAAahE,EAAc,CAAEC,UAE3BE,EAA2B6D,EAA3B7D,KAAMQ,EAAqBqD,EAArBrD,iBAERsD,EAAehE,EAAMiE,QAAO,YAAgC,IAA7BlB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACzCkB,EAAQ,UAAMnB,EAAWR,cAAjB,YAAkCS,EAAUT,eAE1D,OAAOR,GAAcmC,EAASV,SAASzB,MAKnCoC,EAAqBzD,EAFR0D,iBAAOJ,EAAc,aAEgB9D,GAiBxD,OACE,cAACL,EAAawE,SAAd,CACElC,MAAO,CACLQ,oBAfsB,SAACG,GAC3BgB,GAAoB,SAACzD,GAAD,OAClBA,EAAKmD,SAASV,GAAMzC,EAAK4D,QAAO,SAAC9B,GAAD,OAAWA,IAAUW,KAArD,sBAA+DzC,GAA/D,CAAqEyC,QAcnEF,oBAHJ,SAME,sBAAKhB,UAAU,qBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,oDAEF,cAAC,EAAD,CAAWG,YAAaA,EAAaC,eAAgBA,IACpDf,EAAY,cAAC,EAAD,IAAa,cAAC,EAAD,CAAWyC,UAAWS,IAChD,cAAC,EAAD,eAAgBJ,IAChB,qBAAKnC,UAAU,gBAAf,SACE,wBAAQC,QArBU,WACnBe,EAAiBnC,QAEtB6D,OAAOC,MAAMC,KAAKC,UAAU7B,KAkBtB,0B,MCzDV8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e8f558bb.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const UsersContext = createContext({});\n","import { useState } from 'react';\n\nimport { DATA_PER_PAGE } from '../consts';\n\nconst usePagination = ({ users }) => {\n  const [page, setPage] = useState(1);\n\n  /**\n   * Change page down\n   */\n  const handlePageDown = () => {\n    if (page > 1) {\n      setPage((prev) => prev - 1);\n    }\n  };\n\n  /**\n   * Change page up\n   */\n  const handlePageUp = () => {\n    if (page < Math.round(users.length / DATA_PER_PAGE)) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  /**\n   * Slice date for page\n   */\n  const sliceDataPerPage = (\n    data = [],\n    page = 1,\n    dataPerPage = DATA_PER_PAGE\n  ) => {\n    const startIndex = (page - 1) * dataPerPage;\n\n    return data?.slice(startIndex, startIndex + dataPerPage);\n  };\n\n  return { handlePageDown, handlePageUp, sliceDataPerPage, page };\n};\n\nexport default usePagination;\n","export const API_USERS =\n  'https://teacode-recruitment-challenge.s3.eu-central-1.amazonaws.com/users.json';\n\nexport const DATA_PER_PAGE = 20;\n","import { useEffect, useState } from 'react';\n\nimport { API_USERS } from '../consts';\n\nconst useGetUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  /**\n   * Get users from API\n   */\n  const fetchData = async () => {\n    try {\n      setIsLoading(true);\n\n      const response = await fetch(API_USERS);\n      const data = await response.json();\n\n      if (data) {\n        setUsers(data);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { users, isLoading };\n};\n\nexport default useGetUsers;\n","const Pagination = ({ page, handlePageDown, handlePageUp }) => (\r\n  <div className=\"contact--pagination\">\r\n    <button\r\n      className=\"contact--pagination-page-switch\"\r\n      onClick={handlePageDown}\r\n    >\r\n      &lt;\r\n    </button>\r\n    <div className=\"contact--pagination-page\">{page}</div>\r\n    <button className=\"contact--pagination-page-switch\" onClick={handlePageUp}>\r\n      &gt;\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Pagination;\r\n","const SearchBar = ({ searchValue, setSearchValue }) => {\r\n  const filterTextChange = (e) => {\r\n    setSearchValue(e.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact--search-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchValue}\r\n        onChange={filterTextChange}\r\n      />\r\n      <button onClick={() => setSearchValue('')}>Clear</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useContext } from 'react';\r\n\r\nimport { UsersContext } from '../context';\r\n\r\nconst UserItem = ({ user }) => {\r\n  const { handleSelectedUsers, selectedUsersIds } = useContext(UsersContext);\r\n\r\n  const { avatar, id, first_name, last_name } = user;\r\n\r\n  const image = <img src={avatar} alt=\"no_photo\" />;\r\n  const imagePlaceHolder = `${first_name.charAt(0)} ${last_name.charAt(0)}`;\r\n\r\n  const avatarImage = avatar ? image : imagePlaceHolder;\r\n\r\n  return (\r\n    <div className=\"contact--list-item\" onClick={() => handleSelectedUsers(id)}>\r\n      <div className=\"contact--avatar\">{avatarImage}</div>\r\n      <div className=\"contact--full-name\">{`${first_name} ${last_name}`}</div>\r\n      <div className=\"contact--checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectedUsersIds.includes(id)}\r\n          id={id}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import UserItem from './UserItem';\r\n\r\nconst UsersList = ({ usersList = [] }) => (\r\n  <div className=\"contact--users-list\">\r\n    {usersList.map((user) => (\r\n      <UserItem key={user.id} user={user} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default UsersList;\r\n","const Loader = () => (\n  <div className=\"contact--loader\">\n    <span>Loading...</span>\n  </div>\n);\n\nexport default Loader;\n","import { useState } from 'react';\nimport { sortBy } from 'lodash';\nimport React from 'react';\n\nimport { UsersContext } from './context';\n\nimport usePagination from './hooks/usePagination';\nimport useGetUsers from './hooks/useGetUsers';\n\nimport Pagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\nimport UsersList from './components/UsersList';\nimport Loader from './components/Loader';\n\nconst App = () => {\n  const [selectedUsersIds, setSelectedUsersIds] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const { users, isLoading } = useGetUsers();\n\n  const pagination = usePagination({ users });\n\n  const { page, sliceDataPerPage } = pagination;\n\n  const filteredList = users.filter(({ first_name, last_name }) => {\n    const fullName = `${first_name.toLowerCase()} ${last_name.toLowerCase()}`;\n\n    return searchValue ? fullName.includes(searchValue) : true;\n  });\n\n  const sortedList = sortBy(filteredList, 'last_name');\n\n  const paginatedUsersList = sliceDataPerPage(sortedList, page);\n\n  /**\n   * Handle selected users\n   */\n  const handleSelectedUsers = (id) => {\n    setSelectedUsersIds((prev) =>\n      prev.includes(id) ? prev.filter((value) => value !== id) : [...prev, id]\n    );\n  };\n\n  const handleUsersSubmit = () => {\n    if (!selectedUsersIds.length) return;\n\n    window.alert(JSON.stringify(selectedUsersIds));\n  };\n\n  return (\n    <UsersContext.Provider\n      value={{\n        handleSelectedUsers,\n        selectedUsersIds,\n      }}\n    >\n      <div className=\"contact--container\">\n        <div className=\"contact--header\">\n          <h2>List of Contacts</h2>\n        </div>\n        <SearchBar searchValue={searchValue} setSearchValue={setSearchValue} />\n        {isLoading ? <Loader /> : <UsersList usersList={paginatedUsersList} />}\n        <Pagination {...pagination} />\n        <div className=\"contact--send\">\n          <button onClick={handleUsersSubmit}>Send</button>\n        </div>\n      </div>\n    </UsersContext.Provider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}