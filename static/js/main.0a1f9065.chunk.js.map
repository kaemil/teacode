{"version":3,"sources":["context.js","components/Pagination.js","components/SearchBar.js","components/UserItem.js","components/UsersList.js","App.js","consts.js","index.js"],"names":["UsersContext","createContext","Pagination","page","handlePageDown","handlePageUp","className","onClick","SearchBar","useContext","searchValue","setSearchValue","type","placeholder","value","onChange","e","target","toLowerCase","UserItem","user","handleSelectedUsers","selectedUsersIds","avatar","id","first_name","last_name","image","src","alt","imagePlaceHolder","charAt","avatarImage","checked","includes","UsersList","usersList","map","App","useState","setSelectedUsersIds","users","setUsers","setPage","fetchData","a","fetch","response","json","data","useEffect","filteredList","filter","fullName","paginatedUsersList","dataPerPage","startIndex","slice","paginatedData","sortBy","Provider","prev","Math","round","length","window","alert","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a1f9065.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const UsersContext = createContext({});\n","const Pagination = ({ page, handlePageDown, handlePageUp }) => (\r\n  <div className=\"contact--pagination\">\r\n    <button\r\n      className=\"contact--pagination-page-switch\"\r\n      onClick={handlePageDown}\r\n    >\r\n      &lt;\r\n    </button>\r\n    <div className=\"contact--pagination-page\">{page}</div>\r\n    <button className=\"contact--pagination-page-switch\" onClick={handlePageUp}>\r\n      &gt;\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Pagination;\r\n","import { useContext } from 'react';\r\n\r\nimport { UsersContext } from '../context';\r\n\r\nconst SearchBar = () => {\r\n  const { searchValue, setSearchValue } = useContext(UsersContext);\r\n\r\n  const filterTextChange = (e) => {\r\n    setSearchValue(e.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact--search-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchValue}\r\n        onChange={filterTextChange}\r\n      />\r\n      <button onClick={() => setSearchValue('')}>Clear</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useContext } from 'react';\r\n\r\nimport { UsersContext } from '../context';\r\n\r\nconst UserItem = ({ user }) => {\r\n  const { handleSelectedUsers, selectedUsersIds } = useContext(UsersContext);\r\n\r\n  const { avatar, id, first_name, last_name } = user;\r\n\r\n  const image = <img src={avatar} alt=\"no_photo\" />;\r\n  const imagePlaceHolder = `${first_name.charAt(0)} ${last_name.charAt(0)}`;\r\n\r\n  const avatarImage = avatar ? image : imagePlaceHolder;\r\n\r\n  return (\r\n    <div className=\"contact--list-item\" onClick={() => handleSelectedUsers(id)}>\r\n      <div className=\"contact--avatar\">{avatarImage}</div>\r\n      <div className=\"contact--full-name\">{`${first_name} ${last_name}`}</div>\r\n      <div className=\"contact--checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selectedUsersIds.includes(id)}\r\n          id={id}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import UserItem from './UserItem';\r\n\r\nconst UsersList = ({ usersList = [] }) => (\r\n  <div className=\"contact--users-list\">\r\n    {usersList.map((user) => (\r\n      <UserItem key={user.id} user={user} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default UsersList;\r\n","import { useEffect, useState } from 'react';\nimport { sortBy } from 'lodash';\nimport React from 'react';\n\nimport { UsersContext } from './context';\n\nimport Pagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\nimport UsersList from './components/UsersList';\n\nimport { API_USERS, DATA_PER_PAGE } from './consts';\n\nconst App = () => {\n  const [selectedUsersIds, setSelectedUsersIds] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n\n  /**\n   * Get users from API\n   */\n  const fetchData = async () => {\n    const response = await fetch(API_USERS);\n    const data = await response.json();\n\n    if (data) {\n      setUsers(data);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /**\n   * Change page down\n   */\n  const handlePageDown = () => {\n    if (page > 1) {\n      setPage((prev) => prev - 1);\n    }\n  };\n\n  /**\n   * Change page up\n   */\n  const handlePageUp = () => {\n    if (page < Math.round(users.length / DATA_PER_PAGE)) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  /**\n   * Slice date for page\n   */\n  const paginatedData = (data = [], page = 1, dataPerPage = DATA_PER_PAGE) => {\n    const startIndex = (page - 1) * dataPerPage;\n\n    return data?.slice(startIndex, startIndex + dataPerPage);\n  };\n\n  const filteredList = users.filter(({ first_name, last_name }) => {\n    const fullName = `${first_name.toLowerCase()} ${last_name.toLowerCase()}`;\n\n    return searchValue ? fullName.includes(searchValue) : true;\n  });\n\n  const sortedList = sortBy(filteredList, 'last_name');\n\n  const paginatedUsersList = paginatedData(sortedList, page);\n\n  /**\n   * Handle selected users\n   */\n  const handleSelectedUsers = (id) => {\n    setSelectedUsersIds((prev) =>\n      prev.includes(id) ? prev.filter((value) => value !== id) : [...prev, id]\n    );\n  };\n\n  const handleUsersSubmit = () => {\n    window.alert(JSON.stringify(selectedUsersIds));\n  };\n\n  return (\n    <UsersContext.Provider\n      value={{\n        handleSelectedUsers,\n        selectedUsersIds,\n        searchValue,\n        setSearchValue,\n      }}\n    >\n      <div className=\"contact--container\">\n        <div className=\"contact--header\">\n          <h2>List of Contacts</h2>\n        </div>\n        <SearchBar />\n        <UsersList usersList={paginatedUsersList} />\n        <Pagination\n          page={page}\n          handlePageDown={handlePageDown}\n          handlePageUp={handlePageUp}\n        />\n        <div className=\"contact--send\">\n          <button onClick={handleUsersSubmit}>Send</button>\n        </div>\n      </div>\n    </UsersContext.Provider>\n  );\n};\n\nexport default App;\n","export const API_USERS =\n  'https://teacode-recruitment-challenge.s3.eu-central-1.amazonaws.com/users.json';\n\nexport const DATA_PER_PAGE = 20;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}